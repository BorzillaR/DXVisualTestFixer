<UserControl x:Class="DXVisualTestFixer.Views.MergedTestInfoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DXVisualTestFixer.Views"
             xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:behaviors="clr-namespace:DXVisualTestFixer.Behaviors"
             xmlns:converters="clr-namespace:DXVisualTestFixer.Converters"
             xmlns:controls="clr-namespace:DXVisualTestFixer.Controls"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:sys="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:root="clr-namespace:DXVisualTestFixer"
             xmlns:core="http://schemas.dxvisualtests.com/winfx/2008/xaml/core"
             xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type dxi:TabBorder}">
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
        </Style>
        <dxmvvm:ObjectToObjectConverter x:Key="InvalidToVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="Invalid" Target="Visible"/>
        </dxmvvm:ObjectToObjectConverter>
        <dxmvvm:ObjectToObjectConverter x:Key="FixedToVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="Fixed" Target="Visible"/>
        </dxmvvm:ObjectToObjectConverter>
        <converters:ImageToClipboardConverter x:Key="ImageToClipboardConverter"/>
        <dxmvvm:ObjectToObjectConverter x:Key="VisibilityConverter" DefaultSource="False" DefaultTarget="Hidden">
            <dxmvvm:MapItem Source="True" Target="Visible"/>
        </dxmvvm:ObjectToObjectConverter>
    </UserControl.Resources>
    <Grid>
        <dxr:RibbonControl>
            <dxr:RibbonDefaultPageCategory>
                <dxr:RibbonPage Caption="Main">
                    <dxr:RibbonPageGroup Caption="Tools" DataContext="{Binding Path=TestInfo.TestInfo}">
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Copy Original" LargeGlyph="{dx:DXImageOffice2013 Image=Copy_32x32.png}" GlyphSize="Large"
                                           Command="{Binding ImageBeforeArr, Converter={StaticResource ImageToClipboardConverter}}"/>
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Copy Current" LargeGlyph="{dx:DXImageOffice2013 Image=Copy_32x32.png}" GlyphSize="Large"
                                           Command="{Binding ImageCurrentArr, Converter={StaticResource ImageToClipboardConverter}}"/>
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Copy Diff" LargeGlyph="{dx:DXImageOffice2013 Image=Copy_32x32.png}" GlyphSize="Large"
                                           Command="{Binding ImageDiffArr, Converter={StaticResource ImageToClipboardConverter}}"/>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="Zoom">
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Zoom -10%" LargeGlyph="{dx:DXImageOffice2013 Image=ZoomOut_32x32.png}" GlyphSize="Large"
                                           Command="{DXCommand Execute='$behaviors:ImageScaleBehavior.ZoomOut()'}"/>
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Zoom 100%" LargeGlyph="{dx:DXImageOffice2013 Image=Zoom100_32x32.png}" GlyphSize="Large"
                                           Command="{DXCommand Execute='$behaviors:ImageScaleBehavior.Zoom100()'}"/>
                        <dxb:BarButtonItem RibbonStyle="Large" Content="Zoom +10%" LargeGlyph="{dx:DXImageOffice2013 Image=ZoomIn_32x32.png}" GlyphSize="Large"
                                           Command="{DXCommand Execute='$behaviors:ImageScaleBehavior.ZoomIn()'}"/>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="Current View">
                        <dxb:BarItemSelector  SelectedItem="{Binding MergerdTestViewType, Mode=TwoWay}">
                            <dxb:BarItemSelector.ItemLinksSource>
                                <sys:ArrayList>
                                    <root:MergerdTestViewType>Diff</root:MergerdTestViewType>
                                    <root:MergerdTestViewType>Before</root:MergerdTestViewType>
                                    <root:MergerdTestViewType>Current</root:MergerdTestViewType>
                                </sys:ArrayList>
                            </dxb:BarItemSelector.ItemLinksSource>
                            <dxb:BarItemSelector.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxb:BarCheckItem Content="{Binding}" RibbonStyle="SmallWithText"/>
                                    </ContentControl>
                                </DataTemplate>
                            </dxb:BarItemSelector.ItemTemplate>
                        </dxb:BarItemSelector>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>
        <dxdo:LayoutGroup Orientation="Vertical" ShowCaption="False">
            <dxdo:LayoutPanel ShowCaption="True" ShowCloseButton="False" ShowPinButton="False" AllowDrag="False" AllowDock="False" AllowClose="False" AllowContextMenu="False">
                <dxdo:LayoutPanel.Caption>
                    <dxe:ComboBoxEdit DataContext="{Binding DataContext}" EditValue="{Binding MergerdTestViewType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False">
                        <dxe:ComboBoxEdit.ItemsSource>
                            <sys:ArrayList>
                                <root:MergerdTestViewType>Diff</root:MergerdTestViewType>
                                <root:MergerdTestViewType>Before</root:MergerdTestViewType>
                                <root:MergerdTestViewType>Current</root:MergerdTestViewType>
                            </sys:ArrayList>
                        </dxe:ComboBoxEdit.ItemsSource>
                    </dxe:ComboBoxEdit>
                </dxdo:LayoutPanel.Caption>
                <Grid>
                    <ContentControl x:Name="before" Content="{Binding Path=TestInfo.TestInfo.ImageBeforeArr}" ContentTemplate="{StaticResource ResourceKey=DraggableScrollViewerDataTemplate}"
                                    Visibility="{DXBinding Expr='MergerdTestViewType eq $root:MergerdTestViewType.Before', Converter={StaticResource VisibilityConverter}}"/>
                    <ContentControl x:Name="current" Content="{Binding Path=TestInfo.TestInfo.ImageCurrentArr}" ContentTemplate="{StaticResource ResourceKey=DraggableScrollViewerDataTemplate}"
                                    Visibility="{DXBinding Expr='MergerdTestViewType eq $root:MergerdTestViewType.Current', Converter={StaticResource VisibilityConverter}}"/>
                    <ContentControl x:Name="diff" Content="{Binding Path=TestInfo.TestInfo.ImageDiffArr}" ContentTemplate="{StaticResource ResourceKey=DraggableScrollViewerDataTemplate}"
                                    Visibility="{DXBinding Expr='MergerdTestViewType eq $root:MergerdTestViewType.Diff', Converter={StaticResource VisibilityConverter}}"/>
                </Grid>
            </dxdo:LayoutPanel>
            <dxdo:LayoutPanel ItemHeight="150" ShowCaption="False">
                <dx:DXTabControl Padding="1">
                    <dx:DXTabItem Header="Diff Compact">
                        <avalonedit:TextEditor DataContext="{Binding TestInfo.TestInfo}" FontFamily="Consolas" IsReadOnly="True">
                            <dxmvvm:Interaction.Behaviors>
                                <behaviors:AvalonEditTextBindingBehavior Text="{Binding Path=TextDiff}"/>
                            </dxmvvm:Interaction.Behaviors>
                        </avalonedit:TextEditor>
                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Diff Full">
                        <avalonedit:TextEditor DataContext="{Binding TestInfo.TestInfo}" FontFamily="Consolas" IsReadOnly="True">
                            <dxmvvm:Interaction.Behaviors>
                                <behaviors:AvalonEditTextBindingBehavior Text="{Binding Path=TextDiffFull}"/>
                            </dxmvvm:Interaction.Behaviors>
                        </avalonedit:TextEditor>
                    </dx:DXTabItem>
                </dx:DXTabControl>
            </dxdo:LayoutPanel>
            <dxdo:LayoutPanel Background="#55FF0000" ItemWidth="*" ItemHeight="Auto" ShowBorder="False" ShowCaption="False" Visibility="{Binding Path='TestInfo.Valid', Converter={StaticResource InvalidToVisibilityConverter}}">
                <StackPanel>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="{DXBinding Expr='`Test Info wrong. Update the ` + @c.TestInfo.TestInfo.Version + ` repostiroy to last version. Error log:`'}"/>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="{DXBinding Expr='@c.TestInfo.TestInfo.InvalidLog'}"/>
                </StackPanel>
            </dxdo:LayoutPanel>
            <dxdo:LayoutPanel Background="#5500FF00" ItemWidth="*" ItemHeight="Auto" ShowBorder="False" ShowCaption="False" Visibility="{Binding Path='TestInfo.Valid', Converter={StaticResource FixedToVisibilityConverter}}">
                <StackPanel>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="Test already fixed."/>
                </StackPanel>
            </dxdo:LayoutPanel>
            <dxdo:LayoutGroup Orientation="Horizontal" ItemHeight="Auto">
                <dxdo:LayoutPanel ItemWidth="*" ShowBorder="False" ShowCaption="False">
                    <dxe:TextEdit Margin="4" VerticalAlignment="Center" EditValue="{DXBinding Expr='TestInfo.ToLog()', Mode=OneWay}" IsReadOnly="True" ShowBorder="False"/>
                </dxdo:LayoutPanel>
                <dxdo:LayoutPanel ShowBorder="False" ShowCaption="False" ItemWidth="Auto">
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Prev" Click="{DXEvent Handler='MovePrevRow.Invoke()'}" Width="100"/>
                        <Button Content="Next" Click="{DXEvent Handler='MoveNextRow.Invoke()'}" Width="100"/>
                        <Button Content="Valid And Next" Click="{DXEvent Handler='Valid()'}" IsEnabled="{DXBinding Expr='TestInfo.Valid == $core:TestState.Valid'}"/>
                        <Button Content="Commit New Test" Click="{DXEvent Handler='Valid()'}" IsEnabled="{DXBinding Expr='TestInfo.Valid == $core:TestState.Invalid'}"
                                Visibility="{DXBinding Expr='TestInfo.Valid == $core:TestState.Invalid', Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
                        <Button Content="Wrong And Next" Click="{DXEvent Handler='Invalid()'}" IsEnabled="{DXBinding Expr='TestInfo.Valid != $core:TestState.Fixed'}"/>
                    </StackPanel>
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:LayoutGroup>
    </Grid>
</UserControl>
