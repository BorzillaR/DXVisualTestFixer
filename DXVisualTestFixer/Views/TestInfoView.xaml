<UserControl x:Class="DXVisualTestFixer.Views.TestInfoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DXVisualTestFixer.Views"
             xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:behaviors="clr-namespace:DXVisualTestFixer.Behaviors"
             xmlns:converters="clr-namespace:DXVisualTestFixer.Converters"
             xmlns:controls="clr-namespace:DXVisualTestFixer.Controls"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:core="clr-namespace:DXVisualTestFixer.Core"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:ArrayToImageConverter x:Key="ArrayToImageConverter"/>
        <dxmvvm:ObjectToObjectConverter x:Key="InvalidToVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="Invalid" Target="Visible"/>
        </dxmvvm:ObjectToObjectConverter>
        <dxmvvm:ObjectToObjectConverter x:Key="FixedToVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="Fixed" Target="Visible"/>
        </dxmvvm:ObjectToObjectConverter>
    </UserControl.Resources>
    <dxdo:LayoutGroup Orientation="Vertical" ShowCaption="False">
        <dxdo:LayoutGroup DataContext="{Binding TestInfoModel.TestInfo.TestInfo}">
            <dxdo:LayoutGroup.Resources>
                <Style TargetType="{x:Type dxdo:LayoutPanel}">
                    <Setter Property="ContentTemplate" Value="{StaticResource DraggableScrollViewerDataTemplate}"/>
                </Style>
            </dxdo:LayoutGroup.Resources>
            <dxdo:LayoutPanel ShowCaption="True" Caption="Before" ShowCloseButton="False" ShowPinButton="False" Content="{Binding ImageBeforeArr}" AllowSizing="False" AllowDrag="False" AllowDock="False" AllowClose="False" AllowContextMenu="False"/>
            <dxdo:LayoutPanel ShowCaption="True" Caption="Current" ShowCloseButton="False" ShowPinButton="False"  Content="{Binding ImageCurrentArr}" AllowSizing="False" AllowDrag="False" AllowDock="False" AllowClose="False" AllowContextMenu="False"/>
            <dxdo:LayoutPanel ShowCaption="True" Caption="Diff" ShowCloseButton="False" ShowPinButton="False" Content="{Binding ImageDiffArr}" AllowSizing="False" AllowDrag="False" AllowDock="False" AllowClose="False" AllowContextMenu="False"/>
        </dxdo:LayoutGroup>
        <dxdo:LayoutPanel ItemHeight="150" ShowCaption="False" DataContext="{Binding TestInfoModel.TestInfo.TestInfo}">
            <avalonedit:TextEditor FontFamily="Consolas" IsReadOnly="True">
                <dxmvvm:Interaction.Behaviors>
                    <behaviors:AvalonEditTextBindingBehavior Text="{Binding Path=TextDiff}"/>
                </dxmvvm:Interaction.Behaviors>
            </avalonedit:TextEditor>
        </dxdo:LayoutPanel>
        <dxdo:LayoutPanel Background="#55FF0000" ItemWidth="*" ItemHeight="Auto" ShowBorder="False" ShowCaption="False" Visibility="{Binding Path='TestInfoModel.TestInfo.Valid', Converter={StaticResource InvalidToVisibilityConverter}}">
            <StackPanel>
                <TextBlock Margin="4" VerticalAlignment="Center" Text="{DXBinding Expr='`Test Info wrong. Update the ` + @c.TestInfoModel.TestInfo.TestInfo.Version + ` repostiroy to last version. Error log:`'}"/>
                <TextBlock Margin="4" VerticalAlignment="Center" Text="{DXBinding Expr='@c.TestInfoModel.TestInfo.TestInfo.InvalidLog'}"/>
            </StackPanel>
        </dxdo:LayoutPanel>
        <dxdo:LayoutPanel Background="#5500FF00" ItemWidth="*" ItemHeight="Auto" ShowBorder="False" ShowCaption="False" Visibility="{Binding Path='TestInfoModel.TestInfo.Valid', Converter={StaticResource FixedToVisibilityConverter}}">
            <StackPanel>
                <TextBlock Margin="4" VerticalAlignment="Center" Text="Test already fixed."/>
            </StackPanel>
        </dxdo:LayoutPanel>
        <dxdo:LayoutGroup Orientation="Horizontal" ItemHeight="Auto">
            <dxdo:LayoutPanel ItemWidth="*" ShowBorder="False" ShowCaption="False">
                <TextBlock Margin="4" VerticalAlignment="Center" Text="{DXBinding Expr='TestInfoModel.TestInfo.ToLog()'}"/>
            </dxdo:LayoutPanel>
            <dxdo:LayoutPanel ShowBorder="False" ShowCaption="False" ItemWidth="Auto">
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Prev" Click="{DXEvent Handler='TestInfoModel.MovePrevRow.Invoke()'}" Width="100"/>
                    <Button Content="Next" Click="{DXEvent Handler='TestInfoModel.MoveNextRow.Invoke()'}" Width="100"/>
                    <Button Content="Valid And Next" Click="{DXEvent Handler='Valid()'}" IsEnabled="{DXBinding Expr='TestInfoModel.TestInfo.Valid == $core:TestState.Valid'}"/>
                    <Button Content="Commit New Test" Click="{DXEvent Handler='Valid()'}" IsEnabled="{DXBinding Expr='TestInfoModel.TestInfo.Valid == $core:TestState.Invalid'}"
                            Visibility="{DXBinding Expr='TestInfoModel.TestInfo.Valid == $core:TestState.Invalid', Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
                    <Button Content="Wrong And Next" Click="{DXEvent Handler='Invalid()'}" IsEnabled="{DXBinding Expr='TestInfoModel.TestInfo.Valid != $core:TestState.Fixed'}"/>
                </StackPanel>
            </dxdo:LayoutPanel>
        </dxdo:LayoutGroup>
    </dxdo:LayoutGroup>
</UserControl>
